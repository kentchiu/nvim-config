*kent-nvim-notes.txt*	Kent Nvim Notes


		  Personal Nvim Tips    by Kent Chiu


Kent Nvim Tips					*kent*

                                      Type |gO| to see the table of contents.

==============================================================================
1. Userful Keymaps					*kent.keymaps*

大部分 <leader> 開頭的 keymaps 能觸發 |which-key.nvim.txt|  的 popup
window.比較不會被忽略, 然而有一些 keymap 不適用 <leader> key 觸發的,
如果沒有經常在使用就會忘記了,所以, 這邊把一些有用, 但是容易被忽略的keymaps
整理出來.



- `gw`: Search word under cursor
- `ya`: Yank all in braces   
- `CTRL-<SPACE>` in vmode : Expand selection.
- `K`: lsp hover
- <leader>ck: lsp signature help

							  
		                       *kent.keymaps.copy-to-commandline*

1. `gw` or `*` to mark word on cursor
2. `:` to command-line mode
3. Press CTRL-r" to paste from default register


------------------------------------------------------------------------------
			                         *kent.keymaps.telescope*

- CTRL-/ :  Show mappings for picker actions (insert mode)
- `?` : Show mappings for picker actions (normal mode)  
- CTRL-q : Send all items not filtered to quickfixlist (qflist)
- ALT-q : Send all selected items to qflist 
- <ESC> or CTRL-[ : Enter normal mode

------------------------------------------------------------------------------
				                       *kent.keymaps.debug*

- <F1>: step into 
- <F2>: step over
- <F3>: step out

------------------------------------------------------------------------------
				                       *kent.keymaps.neotest*

from |neotest.setup()|

>
    summary = {
      animated = true,
      enabled = true,
      expand_errors = true,
      follow = true,
      mappings = {
        attach = "a",
        clear_marked = "M",
        clear_target = "T",
        debug = "d",
        debug_marked = "D",
        expand = { "<CR>", "<2-LeftMouse>" },
        expand_all = "e",
        jumpto = "i",
        mark = "m",
        next_failed = "J",
        output = "o",
        prev_failed = "K",
        run = "r",
        run_marked = "R",
        short = "O",
        stop = "u",
        target = "t"
      },
<

==============================================================================
2. Commands	                 			*kent.commands*



==============================================================================
3. Tmux	                         			*kent.tmux*

- `<lader> + ?` : List all key mappings
- `<lader> + z` : Maximum curren pane



==============================================================================
4. MISC	                         			*kent.misc*

Text Object 裡面的 `word` 跟 `WORD` 的差別:

A word is... an almost C-style variable name.

– A consecutive string of characters containing only of letters, digits and 
  underscores.
– Can be modified through the 'iskeyword' option, if you are working with a 
  language that has slightly different specification of variable names!
– They are meant to indicate variable name and values!

A WORD is... what unix standard thinks is a word.

- A sequence of characters delimited by any kind of whitespace characters.

==============================================================================
5. Help 						*kent.help*

如果這個 help file 在 NVIM 裡面變成 readonly , 可以用 `setlocal modifiable`
讓它變成可以寫入


To rebuild this document:

Go to the "doc" folder and run the command `:helptags doc` . This will generate 
a "tags" file in the same folder. Once the file has been generated, the 
command `:help kent` should work.

Vim Doc syntax: |help-writing|


code block   >

  function xxx 
  ddefe
  endfunction

<
------------------------------------------------------------------------------
						  *kent.help.help-syntax*

- 標題：用 * 開頭和結尾的一行文字表示標題.
- 段落：用空行分隔的一段連續文字表示一個段落，每段文字應不超過 80 個字元。
- 清單：以 -、+、或 * 開頭的行表示清單項目。
- 程式碼區塊：用 | 包住的詞彙或片語表示程式碼區塊.
- 強調：用 _ 包住的詞彙或片語表示需要強調的內容.
- 超連結：使用 | 包住的詞彙或片語表示超連結。

cheatsheet: https://devhints.io/vim-help

 vim:tw=78:ts=8:noet:ft=help:norl:
